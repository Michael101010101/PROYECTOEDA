/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import AlgoritmoRR.GestionNodos;
import AlgoritmoRR.NodoProceso;
import AlgoritmoSJF.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LUIS
 */
public class SJF extends javax.swing.JFrame {

    /**
     * Creates new form RR
     */
    private DefaultTableModel modelo;
    private GestionNodos refGN;
    private ShortestJobFirst colaProcesos = new ShortestJobFirst();
    private int count = 0;
    private String[][] tab = new String[10][5];
    
    public SJF() {
        initComponents();
        
        refGN = new GestionNodos();
        modelo = new DefaultTableModel();
        modelo.addColumn("Proceso");
        modelo.addColumn("Tiempo de ejecuci칩n");
        modelo.addColumn("Tiempo de llegada");
        modelo.addColumn("Tiempo de comienzo");
        modelo.addColumn("Tiempo de finalizaci칩n");
        
        this.jTable1.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("ALGORITMO SHORTEST JOB FIRST");

        jButton1.setText("Regresar Inicio");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("A침ade tus procesos:");

        jLabel3.setText("Nombre:");

        jLabel4.setText("Tiempo de llegada:");

        jLabel5.setText("Tiempo de ejecuci칩n:");

        jButton2.setText("Ingresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Tabla de resultados:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Log de procesos:");

        jButton3.setText("Simular");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jButton2)))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(jButton1)
                        .addGap(224, 224, 224))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(214, 214, 214))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Dashboard main = new Dashboard();
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String nombre = this.jTextField1.getText();
        int tempLlegada = Integer.parseInt(this.jTextField2.getText());
        int tempEjec = Integer.parseInt(this.jTextField3.getText());
        
        NodoProceso ref = new NodoProceso(nombre,tempEjec,tempLlegada);
        colaProcesos.agregarProceso(ref);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        int tiempoActual = 0;
        NodoProceso procesollegada = colaProcesos.getNext();
        int conta = 0;
        int max = colaProcesos.contador();
        String log="";
        System.out.println(colaProcesos.contador());
        
        resetTable();
        
        while(!colaProcesos.estaVac칤a()){ 
            if(tiempoActual == 0){
                NodoProceso proceso1 = colaProcesos.getPrimero();
                proceso1.isEjecutado();
                log+="Tiempo "+tiempoActual+": "+proceso1.getNombre()+" entra a ejecuci칩n\n";
                proceso1.setTiempoInicio(tiempoActual);
                tiempoActual+=proceso1.getTiempoEjec();
                if(conta < max){
                    while(procesollegada.getTiempoLlegada() < tiempoActual){
                        log+="Tiempo "+procesollegada.getTiempoLlegada()+": llega el proceso "+procesollegada.getNombre()+"\n";
                        if(procesollegada.getSiguiente() != null){
                            procesollegada = procesollegada.getSiguiente();
                            conta++;
                        }else{
                            conta++;
                            break;
                        }
                    }
                }
                max = max - conta;
                conta = 1;
                log+="Tiempo "+tiempoActual+": "+proceso1.getNombre()+" termina su ejecuci칩n\n";
                proceso1.setTiempoFin(tiempoActual);
                load(proceso1);
                colaProcesos.eliminarProceso(proceso1);

            }
          
            NodoProceso procesoActual = colaProcesos.obtenerProcesoMasCorto(tiempoActual);
            if(!procesoActual.isEjecutado()){
                if(tiempoActual < procesoActual.getTiempoLlegada()){
                    log+="Tiempo "+procesollegada.getTiempoLlegada()+": llega el proceso "+procesollegada.getNombre()+"\n";
                    procesollegada = procesollegada.getSiguiente();
                    log+="Tiempo "+procesoActual.getTiempoLlegada()+": "+procesoActual.getNombre()+" entra a ejecuci칩n\n";
                    procesoActual.setTiempoInicio(tiempoActual);
                    tiempoActual+=procesoActual.getTiempoLlegada();
                } else{
                    log+="Tiempo "+tiempoActual+": "+procesoActual.getNombre()+" entra a ejecuci칩n\n";
                    procesoActual.setTiempoInicio(tiempoActual);
                    tiempoActual+=procesoActual.getTiempoEjec();

                }
                if(conta < max){
                    while(procesollegada.getTiempoLlegada() < tiempoActual){
                        log+="Tiempo "+procesollegada.getTiempoLlegada()+": llega el proceso "+procesollegada.getNombre()+"\n";
                        if(procesollegada.getSiguiente() != null){
                            procesollegada = procesollegada.getSiguiente();
                            conta++;
                        }else{
                            conta++;
                            break;
                        }
                    }
                }

            }
            
            log+="Tiempo "+tiempoActual+": "+procesoActual.getNombre()+" termina su ejecuci칩n\n";
            procesoActual.setTiempoFin(tiempoActual);
            load(procesoActual);
            colaProcesos.eliminarProceso(procesoActual);

        }
            
        log+="Tiempo "+tiempoActual+": Se ejecutaron todos los procesos\n";
        CargarTabla();
        this.jTextArea1.setText(log);
    }//GEN-LAST:event_jButton3ActionPerformed
    
    public void load(NodoProceso pro){
        
        String[] datos = new String[5];
        datos[0] = pro.getNombre();
        System.out.println(pro.getNombre());
        datos[1] = String.valueOf(pro.getTiempoEjec());
        System.out.println(pro.getTiempoEjec());
        datos[2] = String.valueOf(pro.getTiempoLlegada());
        System.out.println(pro.getTiempoLlegada());
        datos[3] = String.valueOf(pro.getTiempoInicio());
        System.out.println(pro.getTiempoInicio());
        datos[4] = String.valueOf(pro.getTiempoFin());
        System.out.println(pro.getTiempoFin());
        
        for (int i = 0; i < 5; i++) {
            tab[count][i]=datos[i];
        }
        count++;
        //
        //modelo.addRow(new Object[] { pro.getNombre(), String.valueOf(pro.getTiempoEjec()), String.valueOf(pro.getTiempoLlegada()), String.valueOf(pro.getTiempoInicio()), String.valueOf(pro.getTiempoFin()) });
    }
    public void resetTable(){
        int filas = this.jTable1.getRowCount();
        for(int i=0;i<filas;i++)
        {
            modelo.removeRow(0);
        }
    }
    
    public void orderTable(String[][] tab){
        for (int i = 0; i < count - 1; i++) {
            for (int j = 0; j < count - i - 1; j++) {
                // Comparamos las cadenas en la columna indicada
                if (Integer.parseInt(tab[j][2]) > Integer.parseInt(tab[j + 1][2])) {
                    // Intercambiamos las filas
                    String[] temp = tab[j];
                    tab[j] = tab[j + 1];
                    tab[j + 1] = temp;
                }
            }
        }
        
        
    }
    
    public void CargarTabla(){
        resetTable();
        orderTable(tab);
        for (int i = 0; i < count; i++) {
            modelo.addRow(tab[i]);
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SJF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
